{"ast":null,"code":"// src/services/api.js - All backend API calls in one place\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests automatically\napi.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// ============ AUTH APIs ============\nexport const login = (username, password) => {\n  return api.post('/auth/login', {\n    username,\n    password\n  });\n};\nexport const logout = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n  return api.post('/auth/logout');\n};\n\n// ============ EXAM APIs ============\nexport const getMyExams = () => {\n  return api.get('/exams');\n};\nexport const getExamById = examId => {\n  return api.get(`/exams/${examId}`);\n};\nexport const getStudentsForExam = examId => {\n  return api.get(`/exams/${examId}/students`);\n};\n\n// ============ ATTENDANCE APIs ============\nexport const markAttendance = (examId, studentId, status, method) => {\n  return api.post('/attendance', {\n    examId,\n    studentId,\n    status,\n    method\n  });\n};\nexport const getAttendanceForExam = examId => {\n  return api.get(`/attendance/exam/${examId}`);\n};\nexport const getAttendanceSummary = examId => {\n  return api.get(`/attendance/exam/${examId}/summary`);\n};\n\n// ============ INCIDENT APIs ============\nexport const reportIncident = (examId, studentId, category, severity, description) => {\n  return api.post('/incidents', {\n    examId,\n    studentId,\n    category,\n    severity,\n    description\n  });\n};\nexport const getIncidentsForExam = examId => {\n  return api.get(`/incidents/exam/${examId}`);\n};\nexport const getIncidentCount = examId => {\n  return api.get(`/incidents/exam/${examId}/count`);\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","sessionStorage","getItem","Authorization","login","username","password","post","logout","removeItem","getMyExams","get","getExamById","examId","getStudentsForExam","markAttendance","studentId","status","method","getAttendanceForExam","getAttendanceSummary","reportIncident","category","severity","description","getIncidentsForExam","getIncidentCount"],"sources":["C:/Users/HPG8/Desktop/Thuma/se/se-invig-app/exam-invigilator-app/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js - All backend API calls in one place\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Add token to requests automatically\r\napi.interceptors.request.use((config) => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\n// ============ AUTH APIs ============\r\nexport const login = (username, password) => {\r\n    return api.post('/auth/login', { username, password });\r\n};\r\n\r\nexport const logout = () => {\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('user');\r\n    return api.post('/auth/logout');\r\n};\r\n\r\n// ============ EXAM APIs ============\r\nexport const getMyExams = () => {\r\n    return api.get('/exams');\r\n};\r\n\r\nexport const getExamById = (examId) => {\r\n    return api.get(`/exams/${examId}`);\r\n};\r\n\r\nexport const getStudentsForExam = (examId) => {\r\n    return api.get(`/exams/${examId}/students`);\r\n};\r\n\r\n// ============ ATTENDANCE APIs ============\r\nexport const markAttendance = (examId, studentId, status, method) => {\r\n    return api.post('/attendance', { examId, studentId, status, method });\r\n};\r\n\r\nexport const getAttendanceForExam = (examId) => {\r\n    return api.get(`/attendance/exam/${examId}`);\r\n};\r\n\r\nexport const getAttendanceSummary = (examId) => {\r\n    return api.get(`/attendance/exam/${examId}/summary`);\r\n};\r\n\r\n// ============ INCIDENT APIs ============\r\nexport const reportIncident = (examId, studentId, category, severity, description) => {\r\n    return api.post('/incidents', { examId, studentId, category, severity, description });\r\n};\r\n\r\nexport const getIncidentsForExam = (examId) => {\r\n    return api.get(`/incidents/exam/${examId}`);\r\n};\r\n\r\nexport const getIncidentCount = (examId) => {\r\n    return api.get(`/incidents/exam/${examId}/count`);\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACzC,OAAOd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAE;IAAEF,QAAQ;IAAEC;EAAS,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM;EACxBP,cAAc,CAACQ,UAAU,CAAC,OAAO,CAAC;EAClCR,cAAc,CAACQ,UAAU,CAAC,MAAM,CAAC;EACjC,OAAOjB,GAAG,CAACe,IAAI,CAAC,cAAc,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAOlB,GAAG,CAACmB,GAAG,CAAC,QAAQ,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,MAAM,IAAK;EACnC,OAAOrB,GAAG,CAACmB,GAAG,CAAC,UAAUE,MAAM,EAAE,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAID,MAAM,IAAK;EAC1C,OAAOrB,GAAG,CAACmB,GAAG,CAAC,UAAUE,MAAM,WAAW,CAAC;AAC/C,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAGA,CAACF,MAAM,EAAEG,SAAS,EAAEC,MAAM,EAAEC,MAAM,KAAK;EACjE,OAAO1B,GAAG,CAACe,IAAI,CAAC,aAAa,EAAE;IAAEM,MAAM;IAAEG,SAAS;IAAEC,MAAM;IAAEC;EAAO,CAAC,CAAC;AACzE,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIN,MAAM,IAAK;EAC5C,OAAOrB,GAAG,CAACmB,GAAG,CAAC,oBAAoBE,MAAM,EAAE,CAAC;AAChD,CAAC;AAED,OAAO,MAAMO,oBAAoB,GAAIP,MAAM,IAAK;EAC5C,OAAOrB,GAAG,CAACmB,GAAG,CAAC,oBAAoBE,MAAM,UAAU,CAAC;AACxD,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAGA,CAACR,MAAM,EAAEG,SAAS,EAAEM,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,KAAK;EAClF,OAAOhC,GAAG,CAACe,IAAI,CAAC,YAAY,EAAE;IAAEM,MAAM;IAAEG,SAAS;IAAEM,QAAQ;IAAEC,QAAQ;IAAEC;EAAY,CAAC,CAAC;AACzF,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIZ,MAAM,IAAK;EAC3C,OAAOrB,GAAG,CAACmB,GAAG,CAAC,mBAAmBE,MAAM,EAAE,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMa,gBAAgB,GAAIb,MAAM,IAAK;EACxC,OAAOrB,GAAG,CAACmB,GAAG,CAAC,mBAAmBE,MAAM,QAAQ,CAAC;AACrD,CAAC;AAED,eAAerB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}